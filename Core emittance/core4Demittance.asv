%% 
% This script reconstructs the projected 2D trace space x-xp and y-yp and
% calculates the core 2D emittance from charge distribution in the ellipse
% area. [Jorge GN]
% >> Run this script after 'phasespace_shear_interpolation.m'

if strcmp(target,'TEM')
    int_interp = sqrt(intx_interp.*inty_interp);
end


[Int_4D,X_4D,Xp_4D,Y_4D,Yp_4D,r0_4D,Scov_4D] = ...
    Density_4D(xg_interp,xp_interp,yg_interp,yp_interp, ...
    sigmaxp_interp,sigmayp_interp,sigmaxpyp_interp,...
    int_interp,[100 100 100 100]);

r0_4D(1)
sum(Int_4D(:).*X_4D(:))/sum(Int_4D(:));
trapz(trapz(trapz(trapz(Int_4D.*X_4D))))/trapz(trapz(trapz(trapz(Int_4D))))
return

%% Calculate 2D core
% rx_2D = [X_2Dxxp(:) Xp_2Dxxp(:)]; rx_2D = rx_2D - repmat(r0_2Dxxp,[size(rx_2D,1),1]);
% ry_2D = [Y_2Dyyp(:) Yp_2Dyyp(:)]; ry_2D = ry_2D - repmat(r0_2Dyyp,[size(ry_2D,1),1]);
% 
% figure(890); clf;
% subplot(211);
% [ex2Dcore,~,~] = core2D_distr(rx_2D,S_2Dxxp,Int_2Dxxp); xlabel('\epsilon^{2D}_{nx,subset} [m rad]');
% subplot(212);
% [ey2Dcore,~,~] = core2D_distr(ry_2D,S_2Dyyp,Int_2Dyyp); xlabel('\epsilon^{2D}_{ny,subset} [m rad]');
